#!/usr/bin/env bash
set -e
set -o pipefail
shopt -s nullglob

CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/msmtp/config"
QUEUE_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/mail.queue"
LOG="${XDG_LOG_HOME:-$HOME/.local/log}/msmtpq-flush.log"

# Like it or not, sometimes the wrong bash version or the wrong path
# will bite you harder than you'd like to admit
echo "smpt flush started on bash ${BASH_VERSION} with PATH ${PATH}" >>${LOG}

exec {stdout}>&1
coproc logger {(while read line; do echo "$(date -Iseconds) $line"; done >>"$LOG";); }
exec >&${logger[1]} 2>&1

lock() {
    local lock_fd
    local path="${!#}"
    exec {lock_fd}<"$path"
    flock "$lock_fd"
}

msg() {
    m="$(date -Iseconds) $*"
    echo "$m" >&$stdout
    echo "$m" >>${LOG}
}

# Anything to do?
DIRS=("$QUEUE_DIR"/*.mail/)
if [[ ${#DIRS} -eq 0 ]]; then
    msg "No mails in $QUEUE_DIR"
    exit 0
fi
unset DIRS # Recompute this later as it can change (look ma, no locks!)...

if [[ ! -w "$QUEUE_DIR" ]]; then
    msg "Insufficient privileges to write to queue at $QUEUE_DIR"
    exit 1
fi

if ! lock -n -x "$QUEUE_DIR"; then
    msg "Already running... for dir  $QUEUE_DIR"
    exit 0
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
    PING="ping -qnc1 -t4 example.com"
else
    PING="ping -qnc1 -w4 example.com"
fi

if ! ${PING} >/dev/null 2>&1; then
    msg "Not Online; aborting"
    exit 0
fi

for mail in "$QUEUE_DIR"/*.mail/; do
    id="$(basename "$mail")"
    prefix="mail [ $id ]"
    if [[ ! -r "$mail/msmtp_flags" ]]; then
        msg "$prefix failed to send message; missing flags"
        continue
    fi
    if [[ ! -r "$mail/message" ]]; then
        msg "$prefix failed to send message; missing message"
        continue
    fi

    if [[ ! -w "$mail" ]]; then
        msg "$prefix failed to send message; insufficient privileges"
        continue
    fi

    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macos xargs has no --arg-file option
        args="$(xargs -0  printf '"%s" '<"$mail/msmtp_flags")"
        prefix="$prefix [ ${args}]"

        # -X will swallow the next argument with msmtp version 1.8.24 on macos
        # so it is dropped and we use the regular logfile
        # Also, the missing xargs --arg-file .
        command="msmtp -C "$CONFIG" ${args}"
        msg "$prefix handing over to msmtp cmd:  ${command}"
        eval ${command}  < "$mail/message"
    else
        prefix="$prefix [ $(xargs -0 -a "$mail/msmtp_flags" printf '%s ')]"

        msg "$prefix handing over to msmtp"
        xargs -0 -a "$mail/msmtp_flags" msmtp -C "$CONFIG" -X - < "$mail/message"
    fi

    ret="$?"
    if [[ ! "$ret" -eq 0 ]] ; then
        msg "$prefix failed to send; msmtp rc = $ret"
        continue
    fi
    if ! rm -rf "$mail"; then
        msg "$prefix sent but not purged from queue!?"
    fi
done

